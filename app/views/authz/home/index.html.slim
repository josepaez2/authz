section.section
  .container
    h1.title Maintenance Dashboard
    .columns
      .column.is-one-quarter
        .card
          .card-content.has-text-centered
            p.title = number_with_delimiter @non_created_controller_actions.count
            p Controller actions to be created
      .column
        .card
          table.table.is-fullwidth
            thead
              tr
                th Controller
                th Action
                th
            tbody
              - if @non_created_controller_actions.blank?
                tr
                  td.has-text-centered[colspan="3"] Up to date!
              - else
                - @non_created_controller_actions.each do |h|
                  tr
                    td = h[:controller]
                    td = h[:action]
                    td
section.section
  .container
    .columns
      .column.is-one-quarter
        .card
          .card-content.has-text-centered
            p.title = ::Authz::ScopingRule.where.not(keyword: ::Authz::Scopables::Base.get_scopables_modules.map{|scoping_module| scoping_module.available_keywords}.flatten.uniq).count
            p Keywords that no longer apply
      .column
        .columns
          - ::Authz::Scopables::Base.get_scopables_names.each do |scoping_module|
            .column
              .card
                table.table.is-fullwidth
                  thead
                    tr
                      th = scoping_module
                  tbody
                    - stale_keywords = ::Authz::ScopingRule.where(scopable: scoping_module).where.not(keyword: scoping_module.constantize.available_keywords).pluck(:keyword).uniq
                    - if stale_keywords.blank?
                      tr
                        td.has-text-centered Nothing here
                    - stale_keywords.each do |keyword|
                      tr
                        td = keyword



section.section
  .container
    .columns
      .column.is-one-quarter
        .card
          .card-content.has-text-centered
            p.title = @invalid_scoping_rules.count
            p Scopables removed from code but still present in the database
      .column
        .card
          table.table.is-fullwidth
            tbody
              - @invalid_scoping_rules.each do |rule_name|
                tr
                  td = rule_name
