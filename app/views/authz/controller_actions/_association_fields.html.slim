.field
  = f.label :business_processes, class: 'label'
  .control
    = f.select 'business_process_ids', options_for_select(::Authz::BusinessProcess.all.pluck(:name, :id), f.object.business_process_ids), {}, { multiple: true }
javascript:
  $('form').validate()
  $('#controller_action_business_process_ids').multiSelect({
    selectableHeader: "<input type='text' style='margin-bottom: 1rem' class='input search-input' autocomplete='off' placeholder='Search...'>",
    selectionHeader: "<input type='text' style='margin-bottom: 1rem' class='input search-input' autocomplete='off' placeholder='Search...'>",
    afterInit: function(ms){
      var that = this,
          $selectableSearch = that.$selectableUl.prev(),
          $selectionSearch = that.$selectionUl.prev(),
          selectableSearchString = '#'+that.$container.attr('id')+' .ms-elem-selectable:not(.ms-selected)',
          selectionSearchString = '#'+that.$container.attr('id')+' .ms-elem-selection.ms-selected';

      that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
      .on('keydown', function(e){
        if (e.which === 40){
          that.$selectableUl.focus();
          return false;
        }
      });

      that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
      .on('keydown', function(e){
        if (e.which == 40){
          that.$selectionUl.focus();
          return false;
        }
      });
    },
    afterSelect: function(){
      this.qs1.cache();
      this.qs2.cache();
    },
    afterDeselect: function(){
      this.qs1.cache();
      this.qs2.cache();
    }
  })
